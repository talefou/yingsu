name: Generate Reports Branch

on:
  push:
    branches: [main]  # 触发条件：推送到 main 分支时运行（可改为 master 或其他）

jobs:
  build-and-push:
    runs-on: ubuntu-latest  # 使用 Ubuntu 环境

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4  # 检出源代码
      with:
        fetch-depth: 0  # 获取完整历史记录，便于分支操作

    - name: Setup Node.js
      uses: actions/setup-node@v4  # 安装 Node.js
      with:
        node-version: '18'  # 根据你的项目调整版本（如 yingsu 用 18.x）

    - name: Install dependencies
      run: npm install  # 运行安装命令（可自定义为 yarn install 等）

    - name: Run build script
      run: npm start  # 运行你的生成脚本（如 yingsu 的 npm start 生成 reports）

    - name: Create or update reports branch
      run: |
        # 检查 reports 分支是否存在，如果不存在则创建
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
        # 切换到 reports 分支（如果不存在则创建）
        git checkout -B reports
        
        # 只保留 reports 目录的文件（删除其他文件）
        git rm -rf .  # 删除所有文件
        git add reports/*  # 添加 reports 目录内容
        git commit -m "Update reports from build $(date)"  # 提交变更
        
        # 强制推送到 reports 分支
        git push -f origin reports
